begin_position = [
    [('R', -5), ('N', -3), ('L', -3), ('Q', -9), ('K', -100), ('L', -3), ('N', -3), ('R', -5)],
    [('P', -1), ('P', -1), ('P', -1), ('P', -1), ('P', -1), ('P', -1), ('P', -1), ('P', -1)],
    [('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0)],
    [('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0)],
    [('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0)],
    [('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0), ('B', 0)],
    [('P', 1), ('P', 1), ('P', 1), ('P', 1), ('P', 1), ('P', 1), ('P', 1), ('P', 1)],
    [('R', 5), ('N', 3), ('L', 3), ('Q', 9), ('K', 100), ('L', 3), ('N', 3), ('R', 5)]
]
# evaluations of the piece-locations, PeSTO's: https://www.chessprogramming.org/PeSTO%27s_Evaluation_Function:

mg_pawn_table = [
    [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.50, 0.50, 0.50, 0.50, 0.50, 0.50, 0.50, 0.50],
    [0.10, 0.10, 0.20, 0.30, 0.30, 0.20, 0.10, 0.10],
    [0.05, 0.05, 0.10, 0.25, 0.25, 0.10, 0.05, 0.05],
    [0.00, 0.00, 0.00, 0.20, 0.20, 0.00, 0.00, 0.00],
    [0.05, -0.05, -0.10, 0.00, 0.00, -0.10, -0.05, 0.05],
    [0.05, 0.10, 0.10, 0, 0, 0.10, 0.10, 0.05],
    [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00]
]
eg_pawn_table = [
    [1.90, 1.90, 1.80, 1.52, 1.60, 1.50, 1.84, 2.00],
    [1.78, 1.73, 1.58, 1.34, 1.47, 1.32, 1.65, 1.87],
    [0.94, 1.00, 0.85, 0.67, 0.56, 0.53, 0.82, 0.84],
    [0.32, 0.24, 0.13, 0.05, -0.02, 0.04, 0.17, 0.17],
    [0.13, 0.09, -0.03, -0.07, -0.07, -0.08, 0.03, -0.01],
    [0.04, 0.07, -0.06, 0.01, 0.00, -0.05, -0.01, -0.08],
    [0.13, 0.08, 0.08, 0.10, 0.13, 0.00, 0.02, -0.07],
    [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00]
]

mg_knight_table = [
    [-0.5, -0.2, -0.2, -0.2, -0.2, -0.2, -0.2, -0.5],
    [-0.2, -0.1, 0.0, 0.0, 0.0, 0.0, -0.1, -0.2],
    [-0.2, 0.0, 0.1, 0.15, 0.15, 0.1, 0.0, -0.2],
    [-0.2, 0.05, 0.15, 0.2, 0.2, 0.15, 0.0, -0.2],
    [-0.2, 0.0, 0.15, 0.2, 0.2, 0.15, 0.0, -0.2],
    [-0.2, 0.05, 0.1, 0.15, 0.15, 0.1, 0.05, -0.2],
    [-0.2, -0.1, 0.0, 0.05, 0.05, 0.0, -0.1, -0.2],
    [-0.5, 0, -0.2, -0.2, -0.2, -0.2, 0, -0.5]
]

eg_knight_table = [
    [-0.58, -0.38, -0.13, -0.28, -0.31, -0.27, -0.63, -0.99],
    [-0.25, -0.08, -0.25, -0.02, -0.09, -0.25, -0.24, -0.52],
    [-0.24, -0.20, 0.10, 0.09, -0.01, -0.09, -0.19, -0.41],
    [-0.17, 0.03, 0.22, 0.22, 0.22, 0.11, 0.08, -0.18],
    [-0.18, -0.06, 0.16, 0.25, 0.16, 0.17, 0.04, -0.18],
    [-0.23, -0.03, -0.01, 0.15, 0.10, -0.03, -0.20, -0.22],
    [-0.42, -0.20, -0.10, -0.05, -0.02, -0.20, -0.23, -0.44],
    [-0.29, -0.51, -0.23, -0.15, -0.22, -0.18, -0.50, -0.64]
]

mg_bishop_table = [
    [-0.20, -0.10, -0.10, -0.10, -0.10, -0.10, -0.10, -0.20],
    [-0.10, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.10],
    [-0.10, 0.00, 0.05, 0.10, 0.10, 0.05, 0.00, -0.10],
    [-0.10, 0.00, 0.05, 0.10, 0.10, 0.05, 0.00, -0.10],
    [-0.10, 0.00, 0.10, 0.10, 0.10, 0.10, 0.00, -0.10],
    [-0.10, 0.10, 0.10, 0.10, 0.10, 0.10, 0.10, -0.10],
    [-0.10, 0.05, 0.00, 0.00, 0.00, 0.00, 0.05, -0.10],
    [-0.20, -0.10, 0, -0.10, -0.10, 0, -0.10, -0.20]
]

eg_bishop_table = [
    [-0.14, -0.21, -0.11, -0.08, -0.07, -0.09, -0.17, -0.24],
    [-0.08, -0.04, 0.07, -0.12, -0.03, -0.13, -0.04, -0.14],
    [0.02, -0.08, 0.00, -0.01, -0.02, 0.06, 0.00, 0.04],
    [-0.03, 0.09, 0.12, 0.09, 0.14, 0.10, 0.03, 0.02],
    [-0.06, 0.03, 0.13, 0.19, 0.07, 0.10, -0.03, -0.09],
    [-0.12, -0.03, 0.08, 0.10, 0.13, 0.03, -0.07, -0.15],
    [-0.14, -0.18, -0.07, -0.01, 0.04, -0.09, -0.15, -0.27],
    [-0.23, -0.09, -0.23, -0.05, -0.09, -0.16, -0.05, -0.17]
]

mg_rook_table = [
    [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [0.05, 0.10, 0.10, 0.10, 0.10, 0.10, 0.10, 0.05],
    [-0.05, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.05],
    [-0.05, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.05],
    [-0.05, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.05],
    [-0.05, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.05],
    [-0.05, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.05],
    [0.00, 0.00, 0.00, 0.05, 0.05, 0.00, 0.00, 0.00]
]

eg_rook_table = [
    [0.13, 0.10, 0.18, 0.15, 0.12, 0.12, 0.08, 0.05],
    [0.11, 0.13, 0.13, 0.11, -0.03, 0.03, 0.08, 0.03],
    [0.07, 0.07, 0.07, 0.05, 0.04, -0.03, -0.05, -0.03],
    [0.04, 0.03, 0.13, 0.01, 0.02, 0.01, -0.01, 0.02],
    [0.03, 0.05, 0.08, 0.04, -0.05, -0.06, -0.08, -0.11],
    [-0.04, 0.00, -0.05, -0.01, -0.07, -0.12, -0.08, -0.16],
    [-0.06, -0.06, 0.00, 0.02, -0.09, -0.09, -0.11, -0.03],
    [-0.09, 0.02, 0.03, -0.01, -0.05, -0.13, 0.04, -0.20]
]

mg_queen_table = [
    [-0.20, -0.10, -0.10, -0.05, -0.05, -0.10, -0.10, -0.20],
    [-0.10, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.10],
    [-0.10, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.10],
    [-0.05, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.05],
    [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
    [-0.10, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.10],
    [-0.10, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.10],
    [-0.20, -0.10, -0.10, 0.10,  0.10, -0.10, -0.10, -0.20]
]

eg_queen_table = [
    [-0.09, 0.22, 0.22, 0.27, 0.27, 0.19, 0.10, 0.20],
    [-0.17, 0.20, 0.32, 0.41, 0.58, 0.25, 0.30, 0.00],
    [-0.20, 0.06, 0.09, 0.49, 0.47, 0.35, 0.19, 0.09],
    [0.03, 0.22, 0.24, 0.45, 0.57, 0.40, 0.57, 0.36],
    [-0.18, 0.28, 0.19, 0.47, 0.31, 0.34, 0.39, 0.23],
    [-0.16, -0.27, 0.15, 0.06, 0.09, 0.17, 0.10, 0.05],
    [-0.22, -0.23, -0.30, -0.16, -0.16, -0.23, -0.36, -0.32],
    [-0.33, -0.28, -0.22, -0.43, -0.05, -0.32, -0.20, -0.41]
]

mg_king_table = [
    [-0.30, -0.40, -0.40, -0.50, -0.50, -0.40, -0.40, -0.30],
    [-0.30, -0.40, -0.40, -0.50, -0.50, -0.40, -0.40, -0.30],
    [-0.30, -0.40, -0.40, -0.50, -0.50, -0.40, -0.40, -0.30],
    [-0.30, -0.40, -0.40, -0.50, -0.50, -0.40, -0.40, -0.30],
    [-0.20, -0.30, -0.30, -0.40, -0.40, -0.30, -0.30, -0.20],
    [-0.10, -0.20, -0.20, -0.20, -0.20, -0.20, -0.20, -0.10],
    [0.20, 0.20, 0.00, 0.00, 0.00, 0.00, 0.20, 0.20],
    [0.20, 0.30, 0.10, 0.00, 0.00, 0.10, 0.30, 0.20]
]

eg_king_table = [
    [-0.74, -0.35, -0.18, -0.18, -0.11, 0.15, 0.04, -0.17],
    [-0.12, 0.17, 0.14, 0.17, 0.17, 0.38, 0.23, 0.11],
    [0.10, 0.17, 0.23, 0.15, 0.20, 0.45, 0.44, 0.13],
    [-0.08, 0.22, 0.24, 0.27, 0.26, 0.33, 0.26, 0.03],
    [-0.18, -0.04, 0.21, 0.24, 0.27, 0.23, 0.09, -0.11],
    [-0.19, -0.03, 0.11, 0.21, 0.23, 0.16, 0.07, -0.09],
    [-0.27, -0.11, 0.04, 0.13, 0.14, 0.04, -0.05, -0.17],
    [-0.53, -0.34, -0.21, -0.11, -0.28, -0.14, -0.24, -0.43]
]

mg_piece_values = {"P": 1, "N": 3, "L": 3, "R": 5, "Q": 9, "K": 100}
eg_piece_values = {"P": 0.94, "N": 2.81, "L": 2.97, "R": 5.12, "Q": 9.36, "K": 100}
mg_board_values = {"Q": mg_queen_table, "N": mg_knight_table, "L": mg_bishop_table, "R": mg_rook_table,
                   "P": mg_pawn_table, "K": mg_king_table}
eg_board_values = {"Q": eg_queen_table, "N": eg_knight_table, "L": eg_bishop_table, "R": eg_rook_table,
                   "P": eg_pawn_table, "K": eg_king_table}

def eval_board(chessboard):
    eval = 0
    if chessboard.middlegame:
        for tuple in chessboard.cells_having_pieces_white:
            i, k = tuple
            cell = chessboard.current_chess_board[i][k]
            piece = cell[0]

            eval = eval + mg_piece_values[piece] + mg_board_values[piece][i][k]

        for tuple in chessboard.cells_having_pieces_black:
            i, k = tuple
            cell = chessboard.current_chess_board[i][k]
            piece = cell[0]

            eval = eval - mg_piece_values[piece] - mg_board_values[piece][7 - i][7 - k]

    elif chessboard.endgame:
        for tuple in chessboard.cells_having_pieces_white:
            i, k = tuple
            cell = chessboard.current_chess_board[i][k]
            piece = cell[0]

            eval = eval + eg_piece_values[piece] + eg_board_values[piece][i][k]

        for tuple in chessboard.cells_having_pieces_black:
            i, k = tuple
            cell = chessboard.current_chess_board[i][k]
            piece = cell[0]

            eval = eval - eg_piece_values[piece] - eg_board_values[piece][7 - i][7 - k]
    return round(eval, 2)
